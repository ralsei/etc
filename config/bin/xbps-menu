#!/bin/sh
# https://github.com/BanchouBoo/dots/blob/master/bin/xbps-menu
# ^ not licensed but...

# sets XDG_CACHE_HOME to it's default if not set
: "${XDG_CACHE_HOME:=$HOME/.cache}"
cache_file="$XDG_CACHE_HOME/xbps-menu/pkglist"

options="install
update
sync
remove
autoremove
clean"

install_preview='pkg={}; pkg="${pkg%% *}"; xbps-query "$pkg" --property state > /dev/null &&
# stat="Status: \033[2K\033[00;32mInstalled\033[0m" ||
# stat="Status: \033[2K\033[0;31mNot installed\033[0m"
stat="Status: Installed" ||
stat="Status: Not installed"
depends=$(xbps-query -R "$pkg" --property run_depends | sed "2,99 s/^/\t\t/")
printf "$stat     \tDependencies:\t%s\n" "$depends" | column --separator "	" --table'

remove_preview='pkg={}; pkg="${pkg%% *}"; revdeps=$(xbps-query --revdeps "$pkg" | sed "2,99 s/^/\t\t/")
printf "Dependents:\t%s\n" "$revdeps"'

log() {
	printf "\n[\033[00;34m..\033[0m] %s\n" "$@"
}

install() {
	if [ ! -f "$cache_file" ]; then
		log "Cache file doesn't exist, syncing repos and generating cache"
		sync
	fi
	packages=$(
	sk --multi --preview "$install_preview" \
        --preview-window "up" < "$cache_file" | \
	while read -r package; do
		echo "${package%% *}"
	done)
	[ "$packages" ] && doas xbps-install -f $packages
}

update() {
	doas xbps-install -u
}

# syncs the repos and updates the cache
sync() {
	log "Syncing remote repositories"
	doas xbps-install -S
	mkdir -p "$XDG_CACHE_HOME/xbps-menu"
	xbps-query -Rs "*" | while read -r line; do
		echo "${line#????}"
	done > "$cache_file"
}

remove() {
	packages=$(
	xbps-query -s "*" | while read -r line; do
		echo "${line#????}"
	done | \
	sk --multi --preview "$remove_preview" \
        --preview-window "up" | \
	while read -r package; do
		echo "${package%% *}"
	done)
	[ "$packages" ] && doas xbps-remove -R $packages
}

autoremove() {
	log "Removing orphaned packages"
	doas xbps-remove -o
}

clean() {
	log "Cleaning cached packages"
	doas xbps-remove -O
}

while :; do
	selection=$(echo "$options" | sk)
	[ "$selection" ] || exit
	"$selection"
done
